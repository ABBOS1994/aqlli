const config = require('../../config.json')
const admin = require('../../helpers/admin.js')
const fs = require('fs').promises

module.exports = async (ctx) => {
  if (ctx.callbackQuery) {
    await ctx.answerCbQuery()
    ctx.user.state = 'admin_addAdmin'
    await ctx.user.save() // üß† saqlab qo‚Äòyamiz

    return ctx.editMessageText(
      `–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ ID.\n\n` +
      `–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${config.admins.join(', ')}`,
      {
        ...admin.backKeyboard,
        parse_mode: 'HTML'
      }
    )
  }

  if (ctx.user.state !== 'admin_addAdmin') return

  // üßπ Holatni tozalaymiz va saqlaymiz
  ctx.user.state = null
  await ctx.user.save()

  const list = ctx.message.text.split(' ')

  for (let i of list) {
    const parsedId = Number(i.trim())
    if (!Number.isInteger(parsedId) || parsedId <= 0) continue

    const index = config.admins.indexOf(parsedId)
    if (index === -1) config.admins.push(parsedId)
    else config.admins.splice(index, 1)
  }

  await fs.writeFile('config.json', JSON.stringify(config, null, 2))

  return ctx.replyWithHTML(
    `‚úÖ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω.\n\n–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫: ${config.admins.join(', ')}`,
    admin.backKeyboard
  )
}
